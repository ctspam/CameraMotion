source 'https://bitbucket.org/sencyai/ios_sdks_release.git'
source 'https://github.com/CocoaPods/Specs.git'
source 'https://cdn.cocoapods.org/'

require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

# Override the platform version for glog
def __apply_Xcode_14_3_RC_post_install_workaround(installer)
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      current_target = config.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
      minimum_target = '14.0'
      if current_target.to_f < minimum_target.to_f
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = minimum_target
      end
    end
  end
end

platform :ios, '14.0'
prepare_react_native_project!

# Force cocoapods to be more deterministic
install! 'cocoapods',
         :deterministic_uuids => false

# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'CameraMotion' do
  config = use_native_modules!

  # Use frameworks instead of static libraries
  use_frameworks! :linkage => :static

  # Flags change depending on the env values.
  flags = get_default_flags()

  # React Native dependencies
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => flipper_config,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Project specific dependencies
  pod 'react-native-worklets-core', :path => '../node_modules/react-native-worklets-core'
  pod 'react-native-smkit-ui', :path => '../node_modules/@sency/react-native-smkit-ui'
  pod 'SocketRocket', :modular_headers => true

  # Override glog deployment target
  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec', :modular_headers => false
  
  post_install do |installer|
    # Apply the workaround
    __apply_Xcode_14_3_RC_post_install_workaround(installer)
    
    # React Native post install
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )

    # Pod specific configurations
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Ensure all pods use the same deployment target
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
        
        # Other necessary settings
        config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        
        # JSI related settings
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1'
        config.build_settings['OTHER_LDFLAGS'] ||= ['$(inherited)']
        config.build_settings['OTHER_LDFLAGS'] << '-Wl,-U,_jsi_runtimeError'

        # Swift version for compatibility
        if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.framework"
          config.build_settings['SWIFT_VERSION'] = '5.0'
        end
      end

      # Special handling for React-Core
      if target.name == 'React-Core'
        target.build_configurations.each do |config|
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'RCT_EXTERN_MODULE=1'
        end
      end
    end
  end
end
